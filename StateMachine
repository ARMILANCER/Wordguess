import javax.swing.*;
import java.util.HashMap;

public class StateMachine {
    private static HashMap<String, JFrame> states = new HashMap<>();
    public static JFrame lastWindows;
    public static void Add(JFrame reference, String name) {
        states.put(name, reference);
    }
    public static void ChangeWindow(String previous,String next) throws Exception {
        if(!states.containsKey(next)) throw new Exception("States doesn't found");
        if(!states.containsKey(previous)) throw new Exception("States doesn't found");
        states.get(previous).setVisible(false);
        states.get(next).setVisible(true);
    }
    public static void ChangeWindow(String previous,JFrame New,String next) throws Exception {
        if(!states.containsKey(next)) throw new Exception("States doesn't found");
        if(!states.containsKey(previous)) throw new Exception("States doesn't found");
        states.get(previous).setVisible(false);
        states.replace(previous,New);
        states.get(next).setVisible(true);
    }
    public static void CloseGame(String previous,String next,JFrame New) throws Exception {
        if(!states.containsKey(next)) throw new Exception("States doesn't found");
        if(!states.containsKey(previous)) throw new Exception("States doesn't found");
        states.get(previous).setVisible(false);
        states.replace(previous,New);
        states.remove(previous);
        states.get(next).setVisible(true);
    }
    public static void Show(String what) throws Exception {
        if(!states.containsKey(what)) throw new Exception("States doesn't found");
        lastWindows = states.get(what);
        lastWindows.setVisible(true);
    }
    public static void close(String what) throws Exception {
        if(!states.containsKey(what)) throw new Exception("States doesn't found");
        lastWindows = states.get(what);
        lastWindows.dispose();
    }
}
